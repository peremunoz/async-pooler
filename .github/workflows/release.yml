name: 🚀 Release & Publish

on:
  push:
    branches:
      - master

jobs:
  verify:
    uses: ./.github/workflows/ci-verify.yml

  publish:
    runs-on: ubuntu-latest
    needs: [verify]
    permissions:
      contents: write
      id-token: write

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          fetch-tags: true

      - name: ⚙️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📦 Install deps
        run: bun install --frozen-lockfile

      - name: 🏗️ Build project
        run: bun run build

      - name: 🧾 Get version from package.json
        id: package
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: 🛑 Skip if version already published
        id: check
        run: |
          VERSION=${{ steps.package.outputs.version }}
          if npm view async-pooler@$VERSION > /dev/null 2>&1; then
            echo "⚠️ Version $VERSION already published on npm. Skipping publish."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: 🧾 Generate changelog (new commits only)
        if: steps.check.outputs.skip == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          bunx conventional-changelog -p conventionalcommits -i CHANGELOG.md -s
          git add CHANGELOG.md
          git commit -m "📝 update CHANGELOG for v${{ steps.package.outputs.version }}" || echo "No changelog changes"

      - name: 📤 Create PR for changelog update
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: changelog/v${{ steps.package.outputs.version }}
          title: "📝 Update CHANGELOG for v${{ steps.package.outputs.version }}"
          body: "This PR updates the changelog for the latest release."
          commit-message: "📝 update CHANGELOG for v${{ steps.package.outputs.version }}"
          labels: "release, changelog"
          delete-branch: true
          assignees: "peremunoz"

      - name: 🤖 Enable auto-merge for changelog PR
        if: steps.cpr.outputs.pull-request-number != ''
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
          
      - name: 🏷️ Create Git tag
        if: steps.check.outputs.skip == 'false'
        run: |
          VERSION=${{ steps.package.outputs.version }}
          TAG="v${VERSION}"
          echo "🏷️ Tagging release as $TAG"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: 🚀 Publish to npm
        if: steps.check.outputs.skip == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm publish --access public
      

      - name: 🧰 Create GitHub Release
        if: steps.check.outputs.skip == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package.outputs.version }}
          name: "v${{ steps.package.outputs.version }}"
          body_path: CHANGELOG.md
